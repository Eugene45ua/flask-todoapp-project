name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  build-push-deploy:
    needs: build-test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USER }}/flask-todoapp
      IMAGE_TAG: latest
      IMAGE_TAG_VERSION: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_VERSION }}

  deploy-to-minikube:
    name: Deploy to Minikube (Manual)
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'workflow_dispatch'

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USER }}/flask-todoapp
      IMAGE_TAG: latest
      IMAGE_TAG_VERSION: ${{ github.sha }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/

      - name: Set image
        run: |
          kubectl set image deployment/flask-todo flask-todo=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_VERSION }}

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/flask-todo --timeout=120s

      - name: Show service URLs
        run: |
          kubectl get svc flask-todo
